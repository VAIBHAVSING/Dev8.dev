name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.0.0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build TypeScript applications
        run: pnpm build
        env:
          DATABASE_URL: "postgresql://dummy:dummy@localhost:5432/dummy"
          AUTH_SECRET: "dummy-secret-for-build"
          NEXTAUTH_URL: "http://localhost:3000"

      - name: Build Go application
        run: |
          cd apps/agent
          go build -ldflags="-s -w" -o bin/agent .

      - name: Create release archives
        run: |
          # Create web app archive
          tar -czf web-app.tar.gz -C apps/web .next package.json

          # Create agent binary archive
          tar -czf agent-binary.tar.gz -C apps/agent bin/agent

      - name: Generate changelog
        id: changelog
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION="${{ github.ref_name }}"
          fi
          
          echo "## What's Changed" > CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "See the full changelog at [CHANGELOG.md](./CHANGELOG.md)" >> CHANGELOG.md
          
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          cat CHANGELOG.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version || github.ref_name }}
          release_name: Release ${{ github.event.inputs.version || github.ref_name }}
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false

      - name: Upload Web App Archive
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./web-app.tar.gz
          asset_name: web-app.tar.gz
          asset_content_type: application/gzip

      - name: Upload Agent Binary Archive
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./agent-binary.tar.gz
          asset_name: agent-binary.tar.gz
          asset_content_type: application/gzip
